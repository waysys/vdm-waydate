-- ----------------------------------------------------------------------------
--
-- MonthsTest - tests of Months module
-- Author: William Shaffer (wshaffer@waysysweb.com)
-- Date:   20 Aug 2024
--
-- This module performs calculations related to months.
-- ----------------------------------------------------------------------------

module MonthsTest

imports 
   from Year 
        values 
            MaxYear : nat1 renamed MaxYear;
            MinYear : nat1 renamed MinYear,

    from Month
        types
            Month renamed Month;

        values
            January : Month renamed January;
            February : Month renamed February;
            December : Month renamed December,

    from MonthYear 
        types 
            MonthYear renamed MonthYear;

        values
            MaxCompletedMonths: int renamed MaxCompletedMonths;
            MaxMonthYear: MonthYear renamed MaxMonthYear;
            MinMonthYear: MonthYear renamed MinMonthYear;

        functions
            isMonthYear: MonthYear -> bool renamed isMonthYear;
            --completedMonths: MonthYear-> int renamed completedMonths;
            increment: MonthYear -> MonthYear renamed increment;
            decrement: MonthYear -> MonthYear renamed decrement;
            create: Month * nat1 -> MonthYear renamed create;
            createFromMonths: int -> MonthYear renamed createFromMonths;
            equals: MonthYear * MonthYear -> bool renamed equals;

        operations
            addMonth: MonthYear * int ==> MonthYear renamed addMonth;                        
                    
exports
    functions
        testAll: () -> bool;
        testBadIncrement: () -> MonthYear;
        testBadDecrement: () -> MonthYear;
        testBadCreate: () -> bool;
        testAdd: () -> bool; 

definitions

-- ----------------------------------------------------------------------------
functions
-------------------------------------------------------------------------------

-- testIsMonthYear tests isMonthYear.
testIsMonthYear: () -> bool
testIsMonthYear() ==
    let 
        monthYear1 = create(January, MinYear),
        monthYear2 = create(December, MaxYear)
    in
        isMonthYear(monthYear1) and 
        isMonthYear(monthYear2)
    ;    

-- testBadCreate checks that a precondition generates and error
testBadCreate: () -> bool 
testBadCreate() == 
    let
        monthYear = create(December, MinYear - 1)
    in
        monthYear = monthYear;

-- testCreateFromMonths tests createFromMonths
testCreateFromMonths: () -> bool 
testCreateFromMonths() == 
    let 
        monthYear1 = createFromMonths(0),
        monthYear2 = createFromMonths(MaxCompletedMonths)
    in 
        equals(monthYear1, MinMonthYear) and 
        equals(monthYear2, MaxMonthYear)
    ;

-- testIncrement tests increment and decrement
testIncrement: () -> bool 
testIncrement() == 
    let 
        monthYear1 = create(January, MinYear),
        monthYear2 = increment(monthYear1),
        monthYear3 = create(February, MinYear)
    in 
        monthYear1 = decrement(monthYear2) and 
        monthYear2 = monthYear3;

-- testBadIncrement tries to increment the MaxMonthYear
testBadIncrement: () -> MonthYear 
testBadIncrement() == 
    let 
        monthYear = create(December, MaxYear)
    in 
        increment(monthYear);

-- testBadDecrement tries to decrement the MinMonthYear
testBadDecrement: () -> MonthYear
testBadDecrement() == 
    let 
        monthYear = create(January, MinYear) 
    in 
        decrement(monthYear);

-- testAdd checks the add function
testAdd: () -> bool 
testAdd() == 
    let 
        monthYear = create(January, 2022),
        monthYear1 = addMonth(monthYear, 2),
        monthYear2 = increment(increment(monthYear)),
        monthYear3 = addMonth(monthYear, -3),
        monthYear4 = decrement(decrement(decrement(monthYear))) 
    in 
        monthYear1 = monthYear2 and monthYear3 = monthYear4;

testAll: () -> bool
testAll() ==
    let 
        sumIsMonthYear = testIsMonthYear(),
        sumCreateFromMonths = testCreateFromMonths(),
        sumIncrement = testIncrement(),
        sumAdd = testAdd()
    in
        sumIsMonthYear and
        sumCreateFromMonths and 
        sumIncrement and 
        sumAdd;

end MonthsTest