-- ----------------------------------------------------------------------------
--
-- DateRangeTest - a module to facilitate tests of DateRange
-- Author: William Shaffer (wshaffer@waysysweb.com)
-- Date: 23 Nov 2023
--
-- This module tests the functions 
-- ----------------------------------------------------------------------------

module DateRangeTest

imports
    from Month
        types
            Month renamed Month;

        values
            June : Month renamed June;
            October : Month renamed October,

    from Date
        types 
            Date renamed Date;

        values
            MinDate;
            MaxDate;

        functions
            create: Month * nat1 * nat1 -> Date,

    from DateRange
        types
            DateRange renamed DateRange;

        functions
            create: Date * Date -> DateRange;
            inRange: DateRange * Date -> bool; 
            overlaps: DateRange * DateRange -> bool;
            size: DateRange -> nat,

    from AbsoluteDate
        types
            AbsoluteDate renamed AbsoluteDate;

        values
            MaxAbsoluteDate;  

        functions
            absoluteDateToNat: AbsoluteDate -> nat1;            

exports
    functions
        testDateRange: () -> bool;
        testOverlap: () -> bool;  
        testSize: () -> bool;         

definitions

-- ----------------------------------------------------------------------------
values
-------------------------------------------------------------------------------

maxDateRange = DateRange`create(Date`MinDate, Date`MaxDate);

date1 = Date`create(June, 1, 2020);
date2 = Date`create(October, 1, 2021);
range1 = DateRange`create(date1, date2);

date3 = Date`create(October, 2, 2021);
date4 = Date`create(October, 9, 2021);
range2 = DateRange`create(date3, date4);

-- ----------------------------------------------------------------------------
functions
-------------------------------------------------------------------------------

-- Test theorems about DateRange and inRange
testDateRange: () -> bool
testDateRange() ==
    let 
        -- all dates are in maxDateRange
        dateInMaxRange = DateRange`inRange(maxDateRange, date1),
        -- dateRange.first is in dateRange
        firstInRange1 = DateRange`inRange(range1, date1),
        -- dateRange.last is in dateRange
        lastInRange1 = DateRange`inRange(range1, date2),
        -- date1 not in range of range2
        notInRange = not DateRange`inRange(range2, date1)
    in 
        dateInMaxRange and firstInRange1 and lastInRange1 and notInRange;

-- Test theorems about overlap
testOverlap: () -> bool
testOverlap() ==
    let
        -- all date ranges overlap with the maxDateRange
        overlapMaxRange = DateRange`overlaps(maxDateRange, range1),
        -- all date ranges overlap with themselves
        overlapSame = DateRange`overlaps(range1, range1),
        -- no overlap
        noOverlap = not DateRange`overlaps(range1, range2)
    in 
        overlapMaxRange and overlapSame and noOverlap;

-- Test the size function
testSize: () -> bool
testSize() ==
    let
        maxSize = DateRange`size(maxDateRange)
    in 
        maxSize = AbsoluteDate`absoluteDateToNat(AbsoluteDate`MaxAbsoluteDate);

end DateRangeTest